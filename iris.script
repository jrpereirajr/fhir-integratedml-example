zn "%SYS"
Do ##class(Security.Users).UnExpireUserPasswords("*")

// creates a web app for fhir-ml api
set props("AutheEnabled") = 64
set props("NameSpace") = "FHIRSERVER"
set props("IsNameSpaceDefault") = 0
set props("DispatchClass") = "PackageSample.Dispatch"
set props("MatchRoles")=":%All"
zw ##class(Security.Applications).Create("/fhir-ml/api" , .props)

zn "HSLIB"
set namespace="FHIRSERVER"
Set appKey = "/fhir/r4"
Set strategyClass = "HS.FHIRServer.Storage.Json.InteractionsStrategy"
Set metadataConfigKey = "HL7v40"
set importdir="/opt/irisapp/src"

//Install a Foundation namespace and change to it
Do ##class(HS.HC.Util.Installer).InstallFoundation(namespace)
zn namespace

// Install elements that are required for a FHIR-enabled namespace
Do ##class(HS.FHIRServer.Installer).InstallNamespace()

// Install an instance of a FHIR Service into the current namespace
Do ##class(HS.FHIRServer.Installer).InstallInstance(appKey, strategyClass, metadataConfigKey,"",0)

set strategy = ##class(HS.FHIRServer.API.InteractionsStrategy).GetStrategyForEndpoint(appKey)
set config = strategy.GetServiceConfigData()
set config.DebugMode = 4
do strategy.SaveServiceConfigData(config)

zpm "install csvgen"
zpm "install sqlbuilder"
zpm "install swagger-ui"

do $System.OBJ.LoadDir("/opt/irisapp/src","ck",,1)

Write "Importing training datasets...",!
Do ##class(community.csvgen).Generate("/opt/irisapp/traindata/appointment-noshows.csv", ",", "Data.AppointmentNoShow","Gender VARCHAR(250),ScheduledDay TIMESTAMP,AppointmentDay TIMESTAMP,Age INTEGER,Neighborhood VARCHAR(250),Scholarship BIT,Hypertension BIT,Diabetes BIT,Alcoholism BIT,Handicap BIT,SMS_received BIT,Noshow BIT")
Do ##class(community.csvgen).Generate("/opt/irisapp/traindata/heart_failure_clinical_records_dataset.csv", ",", "Data.HeartFailure")
Set param = ##class(%ParameterDefinition).%New("Data.HeartFailure:BASEDATE")
Set param.Default = +$Now()
Set param.Deprecated = 0
Set param.Final = 0
Set param.Internal = 0
Set param.Type = "%Date"
Set sc = param.%Save()
Throw:(sc '= 1) ##class(%Exception.StatusException).CreateFromStatus(sc)
Do $System.OBJ.Compile("Data.HeartFailure", "ck")
Write "Generating FHIR data based on training datasets...",!
ZWrite ##class(PackageSample.PopulateNoShow).%New().Populate(2000)
ZWrite ##class(PackageSample.PopulateHeartFailure).%New().Populate(299)
Write "Apllying DTL transformation on FHIR data to ML datasets generation..."
ZWrite ##class(PackageSample.FHIRNoShowETL).%New().Execute(2000)
ZWrite ##class(PackageSample.FHIRHeartFailureETL).%New().Execute(299)
Write "Training models..." 
Do ##class(PackageSample.Utils).TrainHeartFailureModel()
Do ##class(PackageSample.Utils).TrainNoShowModel()

halt
