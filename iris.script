zn "%SYS"
Do ##class(Security.Users).UnExpireUserPasswords("*")

// creates the default web app for fhirserver namespace
Kill props
set props("AutheEnabled") = 32
set props("NameSpace") = "FHIRSERVER"
set props("Enabled") = 1
set props("IsNameSpaceDefault") = 1
set props("DeepSeeEnabled") = 1
set props("CookiePath") = "/csp/fhirserver/"
set props("Path") = "/usr/irissys/csp/fhirserver/"
set props("MatchRoles")=":%All"
zw ##class(Security.Applications).Create("/csp/fhirserver" , .props)

// creates a web app for fhir-ml api
Kill props
set props("AutheEnabled") = 64
set props("NameSpace") = "FHIRSERVER"
set props("IsNameSpaceDefault") = 0
set props("DispatchClass") = "PackageSample.Dispatch"
set props("MatchRoles")=":%All"
zw ##class(Security.Applications).Create("/fhir-ml/api" , .props)

zn "HSLIB"
set namespace="FHIRSERVER"
Set appKey = "/fhir/r4"
Set strategyClass = "HS.FHIRServer.Storage.Json.InteractionsStrategy"
Set metadataConfigKey = "HL7v40"
set importdir="/opt/irisapp/src"

//Install a Foundation namespace and change to it
Do ##class(HS.HC.Util.Installer).InstallFoundation(namespace)
zn namespace

// Install elements that are required for a FHIR-enabled namespace
Do ##class(HS.FHIRServer.Installer).InstallNamespace()

// Install an instance of a FHIR Service into the current namespace
Do ##class(HS.FHIRServer.Installer).InstallInstance(appKey, strategyClass, metadataConfigKey,"",0)

set strategy = ##class(HS.FHIRServer.API.InteractionsStrategy).GetStrategyForEndpoint(appKey)
set config = strategy.GetServiceConfigData()
set config.DebugMode = 4
do strategy.SaveServiceConfigData(config)

// *******
// commented to avoid troubles with ZPM service downtimes, used local code instead
// todo: remove after fixing zpm unavailability
// *******
// zpm "install csvgen"
// "install swagger-ui"
// *******
// imports swagger-ui manually
zpm "load /tmp/swagger-ui/"

Do $System.OBJ.LoadDir("/opt/irisapp/src","ck",,1)

Do ##class(PackageSample.Utils).Install()

halt
